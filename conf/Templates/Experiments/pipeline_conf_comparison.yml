---
# Pipeline 1: Features Trained Independently
# Deep Learning
Pipeline1_DL:
  feature_selection: ['relieff', 'relieff', 'univariate', 'none', 'none']
  data_split: 'k-fold'
  data_list: ['mri', 'pet', 'fluid', 'clinical', 'sociodemographic']
  classifiers: ['dl_1', 'dl_2', 'dl_3', 'dl_4', 'dl_5']
  layers: [['32','tanh'],['5','softmax']]
  dropouts: ['0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adagrad'
  epochs: '40'
  batch_size: '32'
  folds: '3'
# Traditional
Pipeline1_Traditional:
  feature_selection: ['univariate', 'none', 'ig', 'none', 'none']
  data_split: 'k-fold'
  data_list: ['mri', 'pet', 'fluid', 'clinical', 'sociodemographic']
  classifiers: ['knn_1', 'knn_2', 'knn_3', 'knn_4', 'knn_5']
  folds: '3'
# Hybrid
Pipeline1_Hybrid:
  feature_selection: ['relieff', 'univariate', 'relieff', 'none', 'none', 'none', 'univariate', 'ig', 'none', 'none']
  data_split: 'k-fold'
  data_list: ['mri', 'mri', 'pet', 'pet', 'fluid', 'fluid', 'clinical', 'clinical', 'sociodemographic', 'sociodemographic']
  classifiers: ['dl_1', 'knn_1', 'dl_2', 'knn_2', 'dl_3', 'knn_3', 'dl_4', 'knn_4', 'dl_5', 'knn_5']
  layers: [['32','tanh'],['5','softmax']]
  dropouts: ['0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adagrad'
  epochs: '40'
  batch_size: '32'
  folds: '3'
# Pipeline 2: Features Grouped by Imaging and Non-Imaging
# Deep Learning
Pipeline2_DL:
  feature_selection: ['rf', 'none']
  data_split: 'k-fold'
  data_list: ['imaging', 'non_imaging']
  classifiers: ['dl_1', 'dl_2']
  layers: [['64','tanh'],['64','tanh'],['5','softmax']]
  dropouts: ['0', '0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adam'
  epochs: '40'
  batch_size: '32'
  folds: '3'
# Traditional
Pipeline2_Traditional:
  feature_selection: ['ig', 'mrmr']
  data_split: 'k-fold'
  data_list: ['imaging', 'non_imaging']
  classifiers: ['knn_1', 'xgb_1']
  folds: '3'
# Hybrid
Pipeline2_Hybrid:
  feature_selection: ['rf', 'ig', 'none', 'mrmr']
  data_split: 'k-fold'
  data_list: ['imaging', 'imaging', 'non_imaging', 'non_imaging']
  classifiers: ['dl_1', 'knn_1', 'dl_2', 'xgb_1']
  layers: [['64','tanh'],['64','tanh'],['5','softmax']]
  dropouts: ['0', '0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adam'
  epochs: '40'
  batch_size: '32'
  folds: '3'
# Pipeline 3: Features Trained Concurrently
# Deep Learning
Pipeline3_DL:
  feature_selection: ['']
  data_split: 'k-fold'
  data_list: ['full_data']
  classifiers: ['dl_1']
  layers: [['128','relu'],['128','relu'],['5','softmax']]
  dropouts: ['0', '0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adagrad'
  epochs: '10'
  batch_size: '32'
  folds: '3'
# Traditional
Pipeline3_Traditional:
  feature_selection: ['none']
  data_split: 'k-fold'
  data_list: ['full_data']
  classifiers: ['xgb_1']
  folds: '3'
# Hybrid
Pipeline3_Hybrid:
  feature_selection: ['univariate', 'none']
  data_split: 'k-fold'
  data_list: ['full_data', 'full_data']
  classifiers: ['dl_1', 'xgb_1']
  layers: [['128','relu'],['128','relu'],['5','softmax']]
  dropouts: ['0', '0', '0']
  loss: 'categorical_crossentropy'
  accuracy: 'categorical_accuracy'
  opt: 'adagrad'
  epochs: '10'
  batch_size: '32'
  folds: '3'